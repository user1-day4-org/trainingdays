(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{644:function(e,a,t){e.exports=t.p+"assets/img/api-premissions.d7f46520.png"},781:function(e,a,t){"use strict";t.r(a);var s=t(10),r=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"challenge-2-oauth-2-implicit-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#challenge-2-oauth-2-implicit-flow"}},[e._v("#")]),e._v(" Challenge 2: OAuth 2 Implicit Flow")]),e._v(" "),a("h2",{attrs:{id:"here-is-what-you-ll-learn-üéØ"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#here-is-what-you-ll-learn-üéØ"}},[e._v("#")]),e._v(" Here is what you'll learn üéØ")]),e._v(" "),a("ul",[a("li",[e._v("How to register an Azure AD application and allow the OAuth2 Implicit Grant Flow")]),e._v(" "),a("li",[e._v("How to register an Azure AD application and expose an API with OAuth2 permissions")]),e._v(" "),a("li",[e._v("How to authenticate an user and start an OAuth2 implicit flow to acquire an access token for the API")])]),e._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),a("p",[e._v("The Implicit Grant Flow is less secure than the Code Grant Flow. This is because the generation of the "),a("code",[e._v("access_token")]),e._v(" for accessing the user's data on a resource server (e.g., the Graph API), is completely happening on the front channel. However, as the flow completely happens in the browser, it is suited for applications that do not have a server backend (e.g., 100% JS-based SPA).")])]),e._v(" "),a("h2",{attrs:{id:"table-of-contents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#table-of-contents"}},[e._v("#")]),e._v(" Table Of Contents")]),e._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"#create-an-azure-ad-application-and-enable-implicit-grant-flow"}},[e._v("Create an Azure AD Application and enable Implicit Grant Flow")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#create-an-azure-ad-application-and-expose-an-api-with-oauth2-permissions"}},[e._v("Create an Azure AD Application and expose an API with OAuth2 Permissions")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#run-the-token-echo-server"}},[e._v("Run the Token Echo Server")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#create-the-request-to-directly-acquire-an-access-token-for-the-microsoft-graph-api"}},[e._v("Create the Request to directly acquire an "),a("code",[e._v("access_token")]),e._v(" for the Microsoft Graph API")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#wrap-up"}},[e._v("Wrap-Up")])]),e._v(" "),a("li",[a("a",{attrs:{href:"#cleanup"}},[e._v("Cleanup")])])]),e._v(" "),a("h2",{attrs:{id:"create-an-azure-ad-application-and-enable-implicit-grant-flow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-an-azure-ad-application-and-enable-implicit-grant-flow"}},[e._v("#")]),e._v(" Create an Azure AD Application and enable Implicit Grant Flow")]),e._v(" "),a("p",[e._v("Before you can authenticate an user and acquire an access token for the API you\nmust register an application in your Azure AD tenant. By default the "),a("em",[e._v("Implicit\nGrant Flow")]),e._v(" for issuing access tokens is disabled.")]),e._v(" "),a("h3",{attrs:{id:"azure-cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#azure-cli"}},[e._v("#")]),e._v(" Azure CLI")]),e._v(" "),a("p",[e._v("First, create a new Azure AD Application, this time with\n"),a("code",[e._v("oauth2-allow-implicit-flow")]),e._v(" enabled:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("az ad app create --display-name challengeimplicitgrant --reply-urls http://localhost:5001/api/tokenechofragment --identifier-uris https://TENANT_DOMAIN.onmicrosoft.com/challengeimplicitgrantflow --oauth2-allow-implicit-flow "),a("span",{pre:!0,attrs:{class:"token boolean"}},[e._v("true")]),e._v("\n")])])]),a("p",[e._v("Replace "),a("code",[e._v("TENANT_DOMAIN")]),e._v(" with the name of your Azure AD instance again.\nAs before, note down the "),a("code",[e._v("appId")]),e._v(". Next, retrieve and note the ID of your current\nAzure AD tenant via:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("az account show\n")])])]),a("h2",{attrs:{id:"create-an-azure-ad-application-and-expose-an-api-with-oauth2-permissions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-an-azure-ad-application-and-expose-an-api-with-oauth2-permissions"}},[e._v("#")]),e._v(" Create an Azure AD Application and expose an API with OAuth2 Permissions")]),e._v(" "),a("p",[e._v("In this sample we create an API that exposes four OAuth2 permissions:")]),e._v(" "),a("ul",[a("li",[e._v("Contacts.Read")]),e._v(" "),a("li",[e._v("Contacts.Create")]),e._v(" "),a("li",[e._v("Contacts.Update")]),e._v(" "),a("li",[e._v("Contacts.Delete")])]),e._v(" "),a("h3",{attrs:{id:"azure-cli-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#azure-cli-2"}},[e._v("#")]),e._v(" Azure CLI")]),e._v(" "),a("p",[e._v("First, create a new Azure AD application and write the output to a variable:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("API_APP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("az ad app create --display-name challengeimplicitgrantapi --identifier-uris https://TENANT_DOMAIN.onmicrosoft.com/challengeimplicitgrantapi"),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n")])])]),a("p",[e._v("Replace "),a("code",[e._v("TENANT_DOMAIN")]),e._v(" with the name of your Azure AD instance again.")]),e._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),a("p",[e._v("üìù The example here describes how to execute the commands in a bash. If\nyou don't have a bash on your system, you can use the Azure Cloud Shell")])]),e._v(" "),a("p",[e._v("After that we have created an Azure AD application that contains one default\nOAuth2 permission which was created by Azure AD. To make your own OAuth2\npermission, the default permission must be disabled first:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# get the app id")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("API_APP_ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("echo")]),e._v(" $API_APP "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-r")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'.appId'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# disable default exposed scope")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DEFAULT_SCOPE")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$(")]),e._v("az ad app show "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--id")]),e._v(" $API_APP_ID "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'.oauth2Permissions[0].isEnabled = false'")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" jq "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("-r")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'.oauth2Permissions'")]),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v(")")])]),e._v("\naz ad app update "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--id")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$API_APP_ID")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--set")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("oauth2Permissions")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$DEFAULT_SCOPE")]),e._v('"')]),e._v("\n")])])]),a("p",[e._v("Now your own OAuth2 permissions can be added:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# set needed scopes from file 'ouath2-permissions (day5/challenges/oauth2-permissions)'")]),e._v("\naz ad app update "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--id")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$API_APP_ID")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--set")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("oauth2Permissions")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("@oauth2-permissions.json\n")])])]),a("p",[e._v("To keep it simple, the needed OAuth2 permissions are defined in a\n"),a("a",{attrs:{href:"oauth2-permissions.json"}},[e._v(".json")]),e._v(" file.")]),e._v(" "),a("p",[e._v("In Azure AD an "),a("em",[e._v("Application")]),e._v(" is something like a template with all necessary\nsettings like ReplyUrl, required permissions, OAuth2 Permissions etc. When a\nuser logs in for the first time and grants consent, an instance of the\napplication is created. The instance is called a "),a("strong",[e._v("Service Principal")]),e._v(". All\ncreated Service principals can be found in your Azure AD under "),a("strong",[e._v("Enterprise\nApplications")]),e._v(". As no user ever logs on to an API we must create the "),a("strong",[e._v("Service\nPrincipal")]),e._v(" for the API.")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("az ad sp create "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--id")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$API_APP_ID")]),e._v("\n")])])]),a("p",[e._v("Go to your Azure AD and inspect at the registered application. The permissions\nshould look like this: "),a("img",{attrs:{src:t(644),alt:"API Permissions"}})]),e._v(" "),a("h2",{attrs:{id:"run-the-token-echo-server"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#run-the-token-echo-server"}},[e._v("#")]),e._v(" Run the Token Echo Server")]),e._v(" "),a("p",[e._v("Open another shell and run the "),a("code",[e._v("Token Echo Server")]),e._v(" from\n"),a("a",{attrs:{href:"https://github.com/azuredevcollege/trainingdays/tree/master/day5/apps/token-echo-server",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("day5/apps/token-echo-server")]),a("OutboundLink")],1),e._v(" in this repository.\nThis helper ASP.NET Core tool is used to echo the token issued by your AAD. The\ntool is listening on port 5001 on your local machine. Tokens are accepted on the\nroute "),a("code",[e._v("http://localhost:5001/api/tokenechofragment")]),e._v(". That's the reason why we\ninitially registered an AAD application with a reply url pointing to\n"),a("code",[e._v("http://localhost:5001/api/tokenechofragment")]),e._v(".")]),e._v(" "),a("p",[e._v("Run the application via:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("dotnet run\n")])])]),a("h2",{attrs:{id:"create-the-request-to-directly-acquire-an-access-token-for-the-microsoft-graph-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-the-request-to-directly-acquire-an-access-token-for-the-microsoft-graph-api"}},[e._v("#")]),e._v(" Create the Request to directly acquire an "),a("code",[e._v("access_token")]),e._v(" for the Microsoft Graph API")]),e._v(" "),a("p",[e._v("We can directly request an "),a("code",[e._v("access_token")]),e._v(" by specifying "),a("code",[e._v("token")]),e._v(" in the\n"),a("code",[e._v("response_type")]),e._v(" field. Adding "),a("code",[e._v("token")]),e._v(" will allow our app to receive an\n"),a("code",[e._v("access_token")]),e._v(" immediately from the authorize endpoint without having to make a\nsecond request to the token endpoint. If you use the token in "),a("code",[e._v("response_type")]),e._v(",\nthe scope parameter must contain a scope indicating which resource to issue the\ntoken for.")]),e._v(" "),a("p",[e._v("Replace "),a("code",[e._v("TENANT_ID")]),e._v(" with your AAD Tenant Id and "),a("code",[e._v("APPLICATION_ID")]),e._v(" with your\nApplication Id (this is the id that you received when you created the first\napplication). Replace "),a("code",[e._v("TENANT_DOMAIN")]),e._v(" with the name of your Azure AD instance and make sure not to temper with the masking. Open a browser and paste the request:")]),e._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("https")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("//login.microsoftonline.com/TENANT_ID/oauth2/v2.0/authorize?")])]),e._v("\nclient_id=APPLICATION_ID\n&response_type=id_token+token\n&redirect_uri=http%3A%2F%2Flocalhost%3A5001%2Fapi%2Ftokenechofragment\n&response_mode=fragment\n&scope=openid%20profile%20https%3A%2F%2FTENANT_DOMAIN.onmicrosoft.com%2Fchallengeimplicitgrantapi%2FContacts.Read%20https%3A%2F%2FTENANT_DOMAIN.onmicrosoft.com%2Fchallengeimplicitgrantapi%2FContacts.Create%20https%3A%2F%2FTENANT_DOMAIN.onmicrosoft.com%2Fchallengeimplicitgrantapi%2FContacts.Update%20https%3A%2F%2FTENANT_DOMAIN.onmicrosoft.com%2Fchallengeimplicitgrantapi%2FContacts.Delete\n&nonce=1234\n")])])]),a("p",[e._v("After executing the request and you have signed in, Azure AD shows you a consent\npage and you have to grant access for the requested API permissions. After\ngiving consent, have a look at your browser's address bar. The "),a("code",[e._v("access_token")]),e._v(" is\nin the fragment of the url and should look something like this:")]),e._v(" "),a("div",{staticClass:"language-http extra-class"},[a("pre",{pre:!0,attrs:{class:"language-http"}},[a("code",[a("span",{pre:!0,attrs:{class:"token header"}},[a("span",{pre:!0,attrs:{class:"token header-name keyword"}},[e._v("http")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),a("span",{pre:!0,attrs:{class:"token header-value"}},[e._v("//localhost:5001/api/tokenechofragment#access_token=eyJ0eX...&token_type=Bearer&expires_in=3599&scope=openid+profile+User.Read+email&id_token=eyJ0eXAiOi...&session_state=0f76c823-eac5-4ec0-9d4a-edf40b783583")])]),e._v("\n")])])]),a("p",[e._v("Make sure to only copy the "),a("code",[e._v("access_token")]),e._v(", not the full remainder of the string!")]),e._v(" "),a("p",[e._v("Go to "),a("a",{attrs:{href:"http://jwt.ms",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://jwt.ms"),a("OutboundLink")],1),e._v(", paste the token and have a look at the\ndecoded token. You will see that there is issued an additional claim "),a("code",[e._v("scp")]),e._v(". This\nclaim contains all OAuth2Permissions the user gave consent to.")]),e._v(" "),a("p",[e._v("More details on how the OAuth2 Implicit Grant Flow request can be used is\ndocumented\n"),a("a",{attrs:{href:"https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-implicit-grant-flow#send-the-sign-in-request",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"wrap-up"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#wrap-up"}},[e._v("#")]),e._v(" Wrap-Up")]),e._v(" "),a("p",[e._v("This challenge showed how to create a new application in AAD and use the OAuth\n2.0 Implicit Grant Flow to request an access token for accessing the Graph API.\nThe full process is described\n"),a("a",{attrs:{href:"https://docs.microsoft.com/azure/active-directory/develop/v2-oauth2-implicit-grant-flow",target:"_blank",rel:"noopener noreferrer"}},[e._v("here"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"cleanup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cleanup"}},[e._v("#")]),e._v(" Cleanup")]),e._v(" "),a("p",[e._v("Remove the created resources via the Azure CLI:")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[e._v("az ad app delete "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--id")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("applicationid"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v("\naz ad app delete "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[e._v("--id")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$API_APP_ID")]),e._v("\n")])])]),a("p",[a("RouterLink",{attrs:{to:"/day5/challenges/01-challenge.html"}},[e._v("‚óÄ Previous challenge")]),e._v(" | "),a("RouterLink",{attrs:{to:"/day5/"}},[e._v("üîº Day 5")]),e._v(" | "),a("RouterLink",{attrs:{to:"/day5/challenges/03-challenge.html"}},[e._v("Next challenge ‚ñ∂")])],1)])}),[],!1,null,null,null);a.default=r.exports}}]);